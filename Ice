{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Hello!\n",
    "My name is Ekaterina. I'm happy to review your project today.\n",
    "When I will see mistake at the first time, I will just point it out. I let you find it and fix it by \n",
    "yourself. I'm trying to prepare you to work as an Data Analyst. SO, at a real job, your team lead \n",
    "will do the same. But if you can't handle this task yet, I will give you a more accurate hint at the \n",
    "next iteration.\n",
    "You will find my comments below - please do not move, modify or delete them.\n",
    "You can find my comments in green, yellow or red boxes like this:\n",
    "<div class=\"alert alert-block alert-success\"> <b>Reviewer's comment</b> <a \n",
    "class=\"tocSkip\"></a>\n",
    "Success. Everything is done succesfully. </div>\n",
    "<div class=\"alert alert-block alert-warning\"> <b>Reviewer's comment</b> <a \n",
    "class=\"tocSkip\"></a>\n",
    "Remarks. Some recommendations. </div>\n",
    "<div class=\"alert alert-block alert-danger\">\n",
    "<b>Reviewer's comment</b> <a class=\"tocSkip\"></a>\n",
    "Needs fixing. The block requires some corrections. Work can't be accepted with the red \n",
    "comments. </div>\n",
    "You can answer me by using this: not sue what i can do about putting all the imports in the first cell \n",
    "<div class=\"alert alert-block alert-info\"> <b>Student answer.</b> <a class=\"tocSkip\"></a> \n",
    "</div>\n",
    "\n",
    "\n",
    "**Keep in mind that the project will be accepted only when all the “red” issues are resolved.**"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<div class=\"alert alert-block alert-success\">\n",
    "    \n",
    "<b>**General feedback**</b> <a class=\"tocSkip\"></a>\n",
    "    \n",
    "Hi, Mohamed \n",
    "    \n",
    "Thank you for submiting such a nice project\n",
    "    \n",
    "There are many things that I like\n",
    "    \n",
    "- great code\n",
    "- good visualizations\n",
    "- correct code for hypotheses testing\n",
    "- nice project structure\n",
    "\n",
    "\n",
    "\n",
    "<span class=\"text-danger\">There are just few issues that need to be fixed: please correct all red comments \n",
    "</span>\n",
    "    \n",
    "One more time and you will have it"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<div class=\"alert alert-block alert-success\">\n",
    "    \n",
    "<b>**General feedback v2**</b> <a class=\"tocSkip\"></a>\n",
    "    \n",
    "Hi, Mohamed \n",
    "    \n",
    "Thank you for your corrections\n",
    "    \n",
    "Now your project is perfect\n",
    "    \n",
    "**I am happy to say that your project has been accepted**\n",
    "    \n",
    "Keep up good work and good luck in the next sprint"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<div class=\"alert alert-block alert-danger\">\n",
    "<b>Reviewer's comment</b> <a class=\"tocSkip\"></a>\n",
    "    \n",
    "~~Please add the project title and short project description~~ </div>"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<div class=\"alert alert-block alert-success\"> <b>Reviewer's comment v2</b> <a \n",
    "class=\"tocSkip\"></a>\n",
    "Fixed </div>"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Project Name: Global Platfoms and Video Games Data Analysis\n",
    "## The aim of this project is to analyze all the gaming platforms and video games accross all the regions in order to conclude the populars ones and the reasons behind this conclusion."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Importing Libarires\n",
    "\n",
    "import pandas as pd\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "import plotly.graph_objects as go\n",
    "import plotly.express as px\n",
    "import scipy.stats as stats\n",
    "import statsmodels.api as sm\n",
    "from scipy.stats import ttest_ind\n",
    "from scipy.stats import pearsonr\n",
    "import numpy as np\n",
    "import datetime"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Data Loading\n",
    "\n",
    "df = pd.read_csv(\"/datasets/games.csv\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<div class=\"alert alert-block alert-success\"> <b>Reviewer's comment</b> <a \n",
    "class=\"tocSkip\"></a>\n",
    "Great We have necessary data </div>"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### The dataframe is for the Excel document of Videogames of gaming platforms and their global information."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 16715 entries, 0 to 16714\n",
      "Data columns (total 11 columns):\n",
      " #   Column           Non-Null Count  Dtype  \n",
      "---  ------           --------------  -----  \n",
      " 0   Name             16713 non-null  object \n",
      " 1   Platform         16715 non-null  object \n",
      " 2   Year_of_Release  16446 non-null  float64\n",
      " 3   Genre            16713 non-null  object \n",
      " 4   NA_sales         16715 non-null  float64\n",
      " 5   EU_sales         16715 non-null  float64\n",
      " 6   JP_sales         16715 non-null  float64\n",
      " 7   Other_sales      16715 non-null  float64\n",
      " 8   Critic_Score     8137 non-null   float64\n",
      " 9   User_Score       10014 non-null  object \n",
      " 10  Rating           9949 non-null   object \n",
      "dtypes: float64(6), object(5)\n",
      "memory usage: 1.4+ MB\n"
     ]
    }
   ],
   "source": [
    "df.info()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### There are 16715 entries and 11 columns in this dataframe."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Name                object\n",
       "Platform            object\n",
       "Year_of_Release    float64\n",
       "Genre               object\n",
       "NA_sales           float64\n",
       "EU_sales           float64\n",
       "JP_sales           float64\n",
       "Other_sales        float64\n",
       "Critic_Score       float64\n",
       "User_Score          object\n",
       "Rating              object\n",
       "dtype: object"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.dtypes"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### There are two data types: Float, Category and Object"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Year_of_Release</th>\n",
       "      <th>NA_sales</th>\n",
       "      <th>EU_sales</th>\n",
       "      <th>JP_sales</th>\n",
       "      <th>Other_sales</th>\n",
       "      <th>Critic_Score</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>16446.000000</td>\n",
       "      <td>16715.000000</td>\n",
       "      <td>16715.000000</td>\n",
       "      <td>16715.000000</td>\n",
       "      <td>16715.000000</td>\n",
       "      <td>8137.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>2006.484616</td>\n",
       "      <td>0.263377</td>\n",
       "      <td>0.145060</td>\n",
       "      <td>0.077617</td>\n",
       "      <td>0.047342</td>\n",
       "      <td>68.967679</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>5.877050</td>\n",
       "      <td>0.813604</td>\n",
       "      <td>0.503339</td>\n",
       "      <td>0.308853</td>\n",
       "      <td>0.186731</td>\n",
       "      <td>13.938165</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>1980.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>13.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>2003.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>60.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>2007.000000</td>\n",
       "      <td>0.080000</td>\n",
       "      <td>0.020000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.010000</td>\n",
       "      <td>71.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>2010.000000</td>\n",
       "      <td>0.240000</td>\n",
       "      <td>0.110000</td>\n",
       "      <td>0.040000</td>\n",
       "      <td>0.030000</td>\n",
       "      <td>79.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>2016.000000</td>\n",
       "      <td>41.360000</td>\n",
       "      <td>28.960000</td>\n",
       "      <td>10.220000</td>\n",
       "      <td>10.570000</td>\n",
       "      <td>98.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       Year_of_Release      NA_sales      EU_sales      JP_sales  \\\n",
       "count     16446.000000  16715.000000  16715.000000  16715.000000   \n",
       "mean       2006.484616      0.263377      0.145060      0.077617   \n",
       "std           5.877050      0.813604      0.503339      0.308853   \n",
       "min        1980.000000      0.000000      0.000000      0.000000   \n",
       "25%        2003.000000      0.000000      0.000000      0.000000   \n",
       "50%        2007.000000      0.080000      0.020000      0.000000   \n",
       "75%        2010.000000      0.240000      0.110000      0.040000   \n",
       "max        2016.000000     41.360000     28.960000     10.220000   \n",
       "\n",
       "        Other_sales  Critic_Score  \n",
       "count  16715.000000   8137.000000  \n",
       "mean       0.047342     68.967679  \n",
       "std        0.186731     13.938165  \n",
       "min        0.000000     13.000000  \n",
       "25%        0.000000     60.000000  \n",
       "50%        0.010000     71.000000  \n",
       "75%        0.030000     79.000000  \n",
       "max       10.570000     98.000000  "
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.describe()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<div class=\"alert alert-block alert-warning\"> <b>Reviewer's comment</b> <a \n",
    "class=\"tocSkip\"></a>\n",
    "    \n",
    "~~Please use df.describe()~~ </div>"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### The above information describe the data of each column in the Games dataframe."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Prepare Data\n",
    "\n",
    "# Replace the column names (make them lowercase)\n",
    "\n",
    "df.columns = df.columns.str.lower()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### All columns' names are now lower cased."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Prepare Data\n",
    "\n",
    "# Convert missing values to NaN\n",
    "df = df.replace(\"\", np.nan)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Missing values are converted to NaN to make it more convenient to analyze the data."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Prepare Data\n",
    "\n",
    "# Convert 'year_of_release' to integer\n",
    "df[\"year_of_release\"] = pd.to_numeric(df[\"year_of_release\"], errors='coerce').astype('Int64')\n",
    "\n",
    "# Convert sales columns to float\n",
    "sales_columns = [\"na_sales\", \"eu_sales\", \"jp_sales\", \"other_sales\"]\n",
    "df[sales_columns] = df[sales_columns].apply(pd.to_numeric, errors='coerce')\n",
    "\n",
    "# Convert 'user_score' to float\n",
    "df[\"user_score\"] = pd.to_numeric(df[\"user_score\"], errors='coerce')\n",
    "\n",
    "# Convert 'critic_score' to integer\n",
    "df[\"critic_score\"] = pd.to_numeric(df[\"critic_score\"], errors='coerce').astype('Int64')\n",
    "\n",
    "# Convert 'platform', 'genre', 'publisher', 'developer', 'rating' to categorical\n",
    "categorical_columns = [\"platform\", \"genre\", \"critic_score\", \"user_score\"]\n",
    "df[categorical_columns] = df[categorical_columns].astype('category')\n",
    "\n",
    "# Convert 'name' to string\n",
    "df[\"name\"] = df[\"name\"].astype(str)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<div class=\"alert alert-block alert-success\"> <b>Reviewer's comment</b> <a \n",
    "class=\"tocSkip\"></a>\n",
    "Perfect primary data preprocessing</div>"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Data is being prepared for cleaning for better analysis and data visualization."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<div class=\"alert alert-block alert-warning\"> <b>Reviewer's comment</b> <a \n",
    "class=\"tocSkip\"></a>\n",
    "    \n",
    "~~We have \"tbd\" values only in user_score column You used pd.to_numeric with parameter errors = \"coerce\" So all 'tbd' became NaN That means you dont need to replace them~~ </div>"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Prepare Data \n",
    "\n",
    "# Filling missing values in the 'rating' column with 'unknown'\n",
    "\n",
    "df['rating'] = df['rating'].fillna('unknown')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Prepare Data\n",
    "\n",
    "# Drop duplicate rows\n",
    "\n",
    "df = df.drop_duplicates()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Dataframe is cleaned from duplicates."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Prepare Data\n",
    "\n",
    "# Calculate the total sales (the sum of sales in all regions) for each game and put these values in a separate column.\n",
    "\n",
    "# New Total Sales column\n",
    "\n",
    "sales_columns = [\"na_sales\", \"eu_sales\", \"jp_sales\", \"other_sales\"]\n",
    "\n",
    "# Calculate the total sales for each game and add it as a new column\n",
    "df[\"total_sales\"] = df[sales_columns].sum(axis=1)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<div class=\"alert alert-block alert-success\"> <b>Reviewer's comment</b> <a \n",
    "class=\"tocSkip\"></a>\n",
    "Well done</div>"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### New column for total_sales"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>name</th>\n",
       "      <th>platform</th>\n",
       "      <th>year_of_release</th>\n",
       "      <th>genre</th>\n",
       "      <th>na_sales</th>\n",
       "      <th>eu_sales</th>\n",
       "      <th>jp_sales</th>\n",
       "      <th>other_sales</th>\n",
       "      <th>critic_score</th>\n",
       "      <th>user_score</th>\n",
       "      <th>rating</th>\n",
       "      <th>total_sales</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Wii Sports</td>\n",
       "      <td>Wii</td>\n",
       "      <td>2006</td>\n",
       "      <td>Sports</td>\n",
       "      <td>41.36</td>\n",
       "      <td>28.96</td>\n",
       "      <td>3.77</td>\n",
       "      <td>8.45</td>\n",
       "      <td>76</td>\n",
       "      <td>8.0</td>\n",
       "      <td>E</td>\n",
       "      <td>82.54</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Super Mario Bros.</td>\n",
       "      <td>NES</td>\n",
       "      <td>1985</td>\n",
       "      <td>Platform</td>\n",
       "      <td>29.08</td>\n",
       "      <td>3.58</td>\n",
       "      <td>6.81</td>\n",
       "      <td>0.77</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>unknown</td>\n",
       "      <td>40.24</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Mario Kart Wii</td>\n",
       "      <td>Wii</td>\n",
       "      <td>2008</td>\n",
       "      <td>Racing</td>\n",
       "      <td>15.68</td>\n",
       "      <td>12.76</td>\n",
       "      <td>3.79</td>\n",
       "      <td>3.29</td>\n",
       "      <td>82</td>\n",
       "      <td>8.3</td>\n",
       "      <td>E</td>\n",
       "      <td>35.52</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Wii Sports Resort</td>\n",
       "      <td>Wii</td>\n",
       "      <td>2009</td>\n",
       "      <td>Sports</td>\n",
       "      <td>15.61</td>\n",
       "      <td>10.93</td>\n",
       "      <td>3.28</td>\n",
       "      <td>2.95</td>\n",
       "      <td>80</td>\n",
       "      <td>8.0</td>\n",
       "      <td>E</td>\n",
       "      <td>32.77</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Pokemon Red/Pokemon Blue</td>\n",
       "      <td>GB</td>\n",
       "      <td>1996</td>\n",
       "      <td>Role-Playing</td>\n",
       "      <td>11.27</td>\n",
       "      <td>8.89</td>\n",
       "      <td>10.22</td>\n",
       "      <td>1.00</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>unknown</td>\n",
       "      <td>31.38</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                       name platform  year_of_release         genre  na_sales  \\\n",
       "0                Wii Sports      Wii             2006        Sports     41.36   \n",
       "1         Super Mario Bros.      NES             1985      Platform     29.08   \n",
       "2            Mario Kart Wii      Wii             2008        Racing     15.68   \n",
       "3         Wii Sports Resort      Wii             2009        Sports     15.61   \n",
       "4  Pokemon Red/Pokemon Blue       GB             1996  Role-Playing     11.27   \n",
       "\n",
       "   eu_sales  jp_sales  other_sales critic_score user_score   rating  \\\n",
       "0     28.96      3.77         8.45           76        8.0        E   \n",
       "1      3.58      6.81         0.77          NaN        NaN  unknown   \n",
       "2     12.76      3.79         3.29           82        8.3        E   \n",
       "3     10.93      3.28         2.95           80        8.0        E   \n",
       "4      8.89     10.22         1.00          NaN        NaN  unknown   \n",
       "\n",
       "   total_sales  \n",
       "0        82.54  \n",
       "1        40.24  \n",
       "2        35.52  \n",
       "3        32.77  \n",
       "4        31.38  "
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Prepare Data\n",
    "\n",
    "df.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<div class=\"alert alert-block alert-danger\">\n",
    "<b>Reviewer's comment</b> <a class=\"tocSkip\"></a>\n",
    "    \n",
    "~~Before further steps please check missing values in dataset and decide what we should do with them~~\n",
    "\n",
    "~~We can not fill in missing values for critic_score and user_score For rating we need to fill with \"unknown\" Rows with missing values in other columns can be droped~~\n",
    "</div>"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### We can take a look using the above code at how our data looked like after preparing it for further analysis."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Number of games released in each year:\n",
      "year_of_release\n",
      "1980       9\n",
      "1981      46\n",
      "1982      36\n",
      "1983      17\n",
      "1984      14\n",
      "1985      14\n",
      "1986      21\n",
      "1987      16\n",
      "1988      15\n",
      "1989      17\n",
      "1990      16\n",
      "1991      41\n",
      "1992      43\n",
      "1993      62\n",
      "1994     121\n",
      "1995     219\n",
      "1996     263\n",
      "1997     289\n",
      "1998     379\n",
      "1999     338\n",
      "2000     350\n",
      "2001     482\n",
      "2002     829\n",
      "2003     775\n",
      "2004     762\n",
      "2005     939\n",
      "2006    1006\n",
      "2007    1197\n",
      "2008    1427\n",
      "2009    1426\n",
      "2010    1255\n",
      "2011    1136\n",
      "2012     653\n",
      "2013     544\n",
      "2014     581\n",
      "2015     606\n",
      "2016     502\n",
      "Name: name, dtype: int64\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x432 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Analyze Data\n",
    "\n",
    "# Look at how many games were released in different years. Is the data for every period significant?\n",
    "\n",
    "# Group by year and count the number of games released in each year\n",
    "year_counts = df.groupby(\"year_of_release\")[\"name\"].count()\n",
    "\n",
    "print(\"Number of games released in each year:\")\n",
    "print(year_counts)\n",
    "\n",
    "# Data visualization\n",
    "plt.figure(figsize=(10, 6))\n",
    "plt.bar(year_counts.index, year_counts.values)\n",
    "plt.xlabel(\"Year of Release\")\n",
    "plt.ylabel(\"Number of Games\")\n",
    "plt.title(\"Number of Games Released Each Year\")\n",
    "plt.xticks(rotation=45)\n",
    "plt.grid(True)\n",
    "plt.show()\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Ever since the year 1980 there are releases of new games every year. This number would obviously increase each year because of the evolution in technology. For example, in the year 1995 less than 200 games were released, this number increased to more than 1400 new released game in the year 2008 but then decreased afterwords to 500 games in 2015."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<div class=\"alert alert-block alert-danger\">\n",
    "<b>Reviewer's comment</b> <a class=\"tocSkip\"></a>\n",
    "    \n",
    "~~Please add a visualization with dynamics of number of games~~</div>"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<div class=\"alert alert-block alert-success\"> <b>Reviewer's comment v2</b> <a \n",
    "class=\"tocSkip\"></a>\n",
    "Great</div>"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "Years with significant data (at least 350 games released):\n",
      "year_of_release\n",
      "1998     379\n",
      "2000     350\n",
      "2001     482\n",
      "2002     829\n",
      "2003     775\n",
      "2004     762\n",
      "2005     939\n",
      "2006    1006\n",
      "2007    1197\n",
      "2008    1427\n",
      "2009    1426\n",
      "2010    1255\n",
      "2011    1136\n",
      "2012     653\n",
      "2013     544\n",
      "2014     581\n",
      "2015     606\n",
      "2016     502\n",
      "Name: name, dtype: int64\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "14849"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Analyze Data\n",
    "\n",
    "# Check if the data for every period is significant\n",
    "min_games_per_year = 350\n",
    "significant_years = year_counts[year_counts >= min_games_per_year]\n",
    "\n",
    "print(\"\\nYears with significant data (at least\", min_games_per_year, \"games released):\")\n",
    "print(significant_years)\n",
    "significant_years.sum()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### We have set the threshold at 350 for the minimum number of games per year. It shows that from the year 1998 to 2016 there are at least 350 games released every year except in 1999."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<div class=\"alert alert-block alert-success\"> <b>Reviewer's comment</b> <a \n",
    "class=\"tocSkip\"></a>\n",
    "Right conclusion</div>"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Total sales by platform:\n",
      "platform\n",
      "PS2     1255.77\n",
      "X360     971.42\n",
      "PS3      939.65\n",
      "Wii      907.51\n",
      "DS       806.12\n",
      "Name: total_sales, dtype: float64\n"
     ]
    }
   ],
   "source": [
    "# Analyze Data\n",
    "\n",
    "# Look at how sales varied from platform to platform. Choose the platforms with the greatest total sales and build a distribution based on data for each year. Find platforms that used to be popular but now have zero sales. How long does it generally take for new platforms to appear and old ones to fade?\n",
    "\n",
    "# Calculate total sales for each platform\n",
    "platform_sales = df.groupby(\"platform\")[\"total_sales\"].sum().sort_values(ascending=False)\n",
    "print(\"Total sales by platform:\")\n",
    "print(platform_sales.head(5))\n",
    "\n",
    "# Top 5 platforms according to Sales\n",
    "\n",
    "top_platforms = platform_sales.head(5).index"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "Sales distribution for PS2:\n",
      "year_of_release\n",
      "2000     39.17\n",
      "2001    166.43\n",
      "2002    205.38\n",
      "2003    184.31\n",
      "2004    211.81\n",
      "2005    160.66\n",
      "2006    103.42\n",
      "2007     75.99\n",
      "2008     53.90\n",
      "2009     26.40\n",
      "2010      5.64\n",
      "2011      0.45\n",
      "Name: total_sales, dtype: float64\n",
      "\n",
      "Sales distribution for X360:\n",
      "year_of_release\n",
      "2005      8.25\n",
      "2006     51.62\n",
      "2007     95.41\n",
      "2008    135.26\n",
      "2009    120.29\n",
      "2010    170.03\n",
      "2011    143.84\n",
      "2012     99.74\n",
      "2013     88.58\n",
      "2014     34.74\n",
      "2015     11.96\n",
      "2016      1.52\n",
      "Name: total_sales, dtype: float64\n",
      "\n",
      "Sales distribution for PS3:\n",
      "year_of_release\n",
      "2006     20.96\n",
      "2007     73.19\n",
      "2008    118.52\n",
      "2009    130.93\n",
      "2010    142.17\n",
      "2011    156.78\n",
      "2012    107.36\n",
      "2013    113.25\n",
      "2014     47.76\n",
      "2015     16.82\n",
      "2016      3.60\n",
      "Name: total_sales, dtype: float64\n",
      "\n",
      "Sales distribution for Wii:\n",
      "year_of_release\n",
      "2006    137.15\n",
      "2007    152.77\n",
      "2008    171.32\n",
      "2009    206.97\n",
      "2010    127.95\n",
      "2011     59.65\n",
      "2012     21.71\n",
      "2013      8.59\n",
      "2014      3.75\n",
      "2015      1.14\n",
      "2016      0.18\n",
      "Name: total_sales, dtype: float64\n",
      "\n",
      "Sales distribution for DS:\n",
      "year_of_release\n",
      "1985      0.02\n",
      "2004     17.27\n",
      "2005    130.14\n",
      "2006    119.81\n",
      "2007    146.94\n",
      "2008    145.31\n",
      "2009    119.54\n",
      "2010     85.02\n",
      "2011     26.18\n",
      "2012     11.01\n",
      "2013      1.54\n",
      "Name: total_sales, dtype: float64\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x432 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Analyze Data\n",
    "\n",
    "# Sales distribution for each year for the top platforms\n",
    "for platform in top_platforms:\n",
    "    platform_data = df[df[\"platform\"] == platform]\n",
    "    platform_year_sales = platform_data.groupby(\"year_of_release\")[\"total_sales\"].sum()\n",
    "    print(f\"\\nSales distribution for {platform}:\")\n",
    "    print(platform_year_sales)\n",
    "    \n",
    "# Data Visualization\n",
    "plt.figure(figsize=(10, 6))\n",
    "plt.plot(platform_year_sales.index, platform_year_sales.values, marker='o')\n",
    "plt.xlabel(\"Year of Release\")\n",
    "plt.ylabel(\"Total Sales\")\n",
    "plt.title(f\"Sales Distribution for {platform}\")\n",
    "plt.xticks(rotation=45)\n",
    "plt.grid(True)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### The DS was not as popular when it was first released as it became recently. In 1990 the sales were almost 0 but then increased dramatically to more than 140 in the year 2008. This number would proceed to decrease until it reach 0 in the year 2011."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x432 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Filtering\n",
    "ps2_data = df[df[\"platform\"] == \"PS2\"]\n",
    "\n",
    "# Grouping\n",
    "ps2_year_sales = ps2_data.groupby(\"year_of_release\")[\"total_sales\"].sum()\n",
    "\n",
    "# Data Visualization\n",
    "plt.figure(figsize=(10, 6))\n",
    "plt.plot(ps2_year_sales.index, ps2_year_sales.values, marker='o', color='blue')\n",
    "plt.xlabel(\"Year of Release\")\n",
    "plt.ylabel(\"Total Sales\")\n",
    "plt.title(\"Sales Distribution for PS2\")\n",
    "plt.xticks(rotation=45)\n",
    "plt.grid(True)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### PS2 have always been a popular platform in the market. In the year 2000 the total sales was around 45 and then increased to reached it's peak in 2004 by more than 200. This number decreased to reach 0 in the year 2012. This is most probably because of the release of the new PS3."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "Sales distribution for X360:\n",
      "year_of_release\n",
      "2005      8.25\n",
      "2006     51.62\n",
      "2007     95.41\n",
      "2008    135.26\n",
      "2009    120.29\n",
      "2010    170.03\n",
      "2011    143.84\n",
      "2012     99.74\n",
      "2013     88.58\n",
      "2014     34.74\n",
      "2015     11.96\n",
      "2016      1.52\n",
      "Name: total_sales, dtype: float64\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x432 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Filtering\n",
    "x360_data = df[df[\"platform\"] == \"X360\"]\n",
    "\n",
    "# Grouping\n",
    "x360_year_sales = x360_data.groupby(\"year_of_release\")[\"total_sales\"].sum()\n",
    "\n",
    "print(\"\\nSales distribution for X360:\")\n",
    "print(x360_year_sales)\n",
    "\n",
    "# Data Visuzaliton\n",
    "plt.figure(figsize=(10, 6))\n",
    "plt.plot(x360_year_sales.index, x360_year_sales.values, marker='o', color='green')\n",
    "plt.xlabel(\"Year of Release\")\n",
    "plt.ylabel(\"Total Sales\")\n",
    "plt.title(\"Sales Distribution for X360\")\n",
    "plt.xticks(rotation=45)\n",
    "plt.grid(True)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### The sales distribution for X360 was around 5 prior to 2006, this number increased to reach it's peak in 2010 by around 173 and then decreased to reach almost 0 in the year 2016. This is probably because of the new release of other gaming platform by the manufacturer of X360."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "Sales distribution for PS3:\n",
      "year_of_release\n",
      "2006     20.96\n",
      "2007     73.19\n",
      "2008    118.52\n",
      "2009    130.93\n",
      "2010    142.17\n",
      "2011    156.78\n",
      "2012    107.36\n",
      "2013    113.25\n",
      "2014     47.76\n",
      "2015     16.82\n",
      "2016      3.60\n",
      "Name: total_sales, dtype: float64\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x432 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Filtering\n",
    "ps3_data = df[df[\"platform\"] == \"PS3\"]\n",
    "\n",
    "# Grouping\n",
    "ps3_year_sales = ps3_data.groupby(\"year_of_release\")[\"total_sales\"].sum()\n",
    "\n",
    "print(\"\\nSales distribution for PS3:\")\n",
    "print(ps3_year_sales)\n",
    "\n",
    "# Data Visualization\n",
    "plt.figure(figsize=(10, 6))\n",
    "plt.plot(ps3_year_sales.index, ps3_year_sales.values, marker='o', color='red')\n",
    "plt.xlabel(\"Year of Release\")\n",
    "plt.ylabel(\"Total Sales\")\n",
    "plt.title(\"Sales Distribution for PS3\")\n",
    "plt.xticks(rotation=45)\n",
    "plt.grid(True)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### The number of PS3 sales when it was first released in 2006 was 20 and then increased sharply to around 155 in 2011. The total sales then decreased to around 5 in the year 2016. The reason behind it could the new release of the PS4."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "Sales distribution for Wii:\n",
      "year_of_release\n",
      "2006    137.15\n",
      "2007    152.77\n",
      "2008    171.32\n",
      "2009    206.97\n",
      "2010    127.95\n",
      "2011     59.65\n",
      "2012     21.71\n",
      "2013      8.59\n",
      "2014      3.75\n",
      "2015      1.14\n",
      "2016      0.18\n",
      "Name: total_sales, dtype: float64\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x432 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Filtering\n",
    "wii_data = df[df[\"platform\"] == \"Wii\"]\n",
    "\n",
    "# Grouping\n",
    "wii_year_sales = wii_data.groupby(\"year_of_release\")[\"total_sales\"].sum()\n",
    "\n",
    "print(\"\\nSales distribution for Wii:\")\n",
    "print(wii_year_sales)\n",
    "\n",
    "# Data Visualization\n",
    "plt.figure(figsize=(10, 6))\n",
    "plt.plot(wii_year_sales.index, wii_year_sales.values, marker='o', color='purple')\n",
    "plt.xlabel(\"Year of Release\")\n",
    "plt.ylabel(\"Total Sales\")\n",
    "plt.title(\"Sales Distribution for Wii\")\n",
    "plt.xticks(rotation=45)\n",
    "plt.grid(True)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### The sales distribution for Wii was around 130 in 2006, this number increased to 210 in the year 2009 and then decreased dramatically to 0 in 2016. This means that demand on Wii decreased because of the customer behaviour change for purchasing Wii."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<div class=\"alert alert-block alert-danger\">\n",
    "<b>Reviewer's comment</b> <a class=\"tocSkip\"></a>\n",
    "    \n",
    "~~All calculations are correct here But you need to visulize data as well~~</div>"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<div class=\"alert alert-block alert-success\"> <b>Reviewer's comment v2</b> <a \n",
    "class=\"tocSkip\"></a>\n",
    "Well done</div>"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Platforms with zero sales in 2016:\n",
      "['2600', '3DO', 'DC', 'DS', 'GB', ..., 'SCD', 'SNES', 'TG16', 'WS', 'XB']\n",
      "Length: 22\n",
      "Categories (31, object): ['2600', '3DO', '3DS', 'DC', ..., 'WiiU', 'X360', 'XB', 'XOne']\n"
     ]
    }
   ],
   "source": [
    "# Identify platforms with zero sales in the latest year\n",
    "\n",
    "# The latest year in the dataset\n",
    "latest_year = df['year_of_release'].max()\n",
    "\n",
    "# Filter the data for the latest year\n",
    "latest_year_data = df[df['year_of_release'] == latest_year]\n",
    "\n",
    "# Group the data by platform and sum the sales for the latest year\n",
    "platform_sales = latest_year_data.groupby('platform')['total_sales'].sum().reset_index()\n",
    "\n",
    "# Platforms with zero sales\n",
    "zero_sales_platforms = platform_sales[platform_sales['total_sales'] == 0]['platform']\n",
    "\n",
    "# Print the platforms with zero sales\n",
    "print(f\"Platforms with zero sales in {latest_year}:\")\n",
    "print(zero_sales_platforms.values)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### There is a total of 22 platforms with zero sales in 2016 such as 2600, 3DO, DC, DS, GB and others."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<div class=\"alert alert-block alert-success\"> <b>Reviewer's comment</b> <a \n",
    "class=\"tocSkip\"></a>\n",
    "Super</div>"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "   platform  lifespan\n",
      "0      2600        10\n",
      "1       3DO         2\n",
      "2       3DS         6\n",
      "3        DC        11\n",
      "4        DS        29\n",
      "5        GB        14\n",
      "6       GBA         8\n",
      "7        GC         7\n",
      "8       GEN         5\n",
      "9        GG         1\n",
      "10      N64         7\n",
      "11      NES        12\n",
      "12       NG         4\n",
      "13       PC        32\n",
      "14     PCFX         1\n",
      "15       PS        10\n",
      "16      PS2        12\n",
      "17      PS3        11\n",
      "18      PS4         4\n",
      "19      PSP        12\n",
      "20      PSV         6\n",
      "21      SAT         6\n",
      "22      SCD         2\n",
      "23     SNES        10\n",
      "24     TG16         1\n",
      "25       WS         3\n",
      "26      Wii        11\n",
      "27     WiiU         5\n",
      "28     X360        12\n",
      "29       XB         9\n",
      "30     XOne         4\n",
      "\n",
      "Summary statistics for platform lifespans:\n",
      "count    31.000000\n",
      "mean      8.612903\n",
      "std       6.998464\n",
      "min       1.000000\n",
      "25%       4.000000\n",
      "50%       7.000000\n",
      "75%      11.000000\n",
      "max      32.000000\n",
      "Name: lifespan, dtype: float64\n"
     ]
    }
   ],
   "source": [
    "# Analyze Data\n",
    "\n",
    "# Analyze the time it takes for new platforms to appear and old ones to fade\n",
    "\n",
    "# Identifying unique platforms and their first and last appearance years\n",
    "platform_years = df.groupby('platform')['year_of_release'].agg(['min', 'max']).reset_index()\n",
    "platform_years.columns = ['platform', 'first_year', 'last_year']\n",
    "\n",
    "# Calculating the time difference between first and last appearance years\n",
    "platform_years['lifespan'] = platform_years['last_year'] - platform_years['first_year'] + 1\n",
    "\n",
    "# Print the lifespan for each platform\n",
    "print(platform_years[['platform', 'lifespan']])\n",
    "\n",
    "# Analyzing the distribution of platform lifespans\n",
    "print(f\"\\nSummary statistics for platform lifespans:\")\n",
    "print(platform_years['lifespan'].describe())"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<div class=\"alert alert-block alert-success\"> <b>Reviewer's comment</b> <a \n",
    "class=\"tocSkip\"></a>\n",
    "Well done</div>"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Platform sales for 2014-2016:\n",
      "platform\n",
      "PS4     288.15\n",
      "XOne    140.36\n",
      "3DS      86.68\n",
      "PS3      68.18\n",
      "X360     48.22\n",
      "WiiU     42.98\n",
      "PC       27.05\n",
      "PSV      22.40\n",
      "Wii       5.07\n",
      "PSP       0.36\n",
      "XB        0.00\n",
      "WS        0.00\n",
      "TG16      0.00\n",
      "SNES      0.00\n",
      "SCD       0.00\n",
      "SAT       0.00\n",
      "2600      0.00\n",
      "PS2       0.00\n",
      "3DO       0.00\n",
      "PCFX      0.00\n",
      "NG        0.00\n",
      "NES       0.00\n",
      "N64       0.00\n",
      "GG        0.00\n",
      "GEN       0.00\n",
      "GC        0.00\n",
      "GBA       0.00\n",
      "GB        0.00\n",
      "DS        0.00\n",
      "DC        0.00\n",
      "PS        0.00\n",
      "Name: total_sales, dtype: float64\n",
      "\n",
      "Top 5 platforms by sales for 2014-2016:\n",
      "platform\n",
      "PS4     288.15\n",
      "XOne    140.36\n",
      "3DS      86.68\n",
      "PS3      68.18\n",
      "X360     48.22\n",
      "Name: total_sales, dtype: float64\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x432 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Analyze Data\n",
    "\n",
    "# Determine what period you should take data for. To do so, look at your answers to the previous questions. The data should allow you to build a model for 2017.\n",
    "\n",
    "# Which platforms are leading in sales? Which ones are growing or shrinking? Select several potentially profitable platforms.\n",
    "\n",
    "# Filtering the data for the years 2014 to 2016\n",
    "df_2014_2016 = df[(df[\"year_of_release\"] >= 2014) & (df[\"year_of_release\"] <= 2016)]\n",
    "\n",
    "# Grouping\n",
    "platform_sales = df_2014_2016.groupby(\"platform\")[\"total_sales\"].sum()\n",
    "\n",
    "# Sorting\n",
    "platform_sales_sorted = platform_sales.sort_values(ascending=False)\n",
    "\n",
    "print(\"Platform sales for 2014-2016:\")\n",
    "print(platform_sales_sorted)\n",
    "\n",
    "# Top 5 platforms by sales\n",
    "top_platforms = platform_sales_sorted.head(5)\n",
    "\n",
    "print(\"\\nTop 5 platforms by sales for 2014-2016:\")\n",
    "print(top_platforms)\n",
    "\n",
    "# Data Visualization\n",
    "plt.figure(figsize=(10, 6))\n",
    "plt.bar(top_platforms.index, top_platforms.values)\n",
    "plt.xlabel(\"Platform\")\n",
    "plt.ylabel(\"Total Sales\")\n",
    "plt.title(\"Top 5 Platforms by Sales (2014-2016)\")\n",
    "plt.xticks(rotation=45)\n",
    "plt.grid(True)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### The above bar chart shows the top 5 platforms by sales in the order from highest to lowest, PS4, XOne, 3DS, PS3, X360. The data is taken from the years between 2014 and 2016. "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<div class=\"alert alert-block alert-danger\">\n",
    "<b>Reviewer's comment</b> <a class=\"tocSkip\"></a>\n",
    "    \n",
    "~~It is uncommon to use data for more than 2-3 years when forecasting next year's sales, even in case of traditional businesses. And in the dynamic computer games industry, taking longer time intervals should be avoided as it will definitely lead to tracking some obsolete trends.~~\n",
    "    \n",
    "~~Please choose shorter period for relevant data~~\n",
    "    \n",
    "\n",
    "</div>"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### The top 4 growing platforms according to sales betweent the years 2010 and 2016 are PS4, XOne, PSV, WiiU, 3DS.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Top 5 shrinking platforms by sales (2014-2016):\n",
      "platform\n",
      "Wii    -76.905263\n",
      "X360   -76.431898\n",
      "PSP    -75.000000\n",
      "PS3    -71.689576\n",
      "WiiU   -48.824233\n",
      "dtype: float64\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x432 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Analyze Data\n",
    "\n",
    "# Which platforms are leading in sales? Which ones are growing or shrinking? Select several potentially profitable platforms.\n",
    "\n",
    "# Grouping\n",
    "platform_year_sales = df_2014_2016.groupby([\"platform\", \"year_of_release\"])[\"total_sales\"].sum().unstack()\n",
    "\n",
    "# Calculating the percentage change in sales from the previous year for each platform\n",
    "pct_change = platform_year_sales.pct_change(axis=1) * 100\n",
    "\n",
    "# Calculating the average percentage change for each platform\n",
    "avg_pct_change = pct_change.mean(axis=1)\n",
    "\n",
    "# Sorting the platforms by average percentage change in ascending order\n",
    "shrinking_platforms = avg_pct_change.sort_values()\n",
    "\n",
    "# Selecting the top 5 shrinking platforms\n",
    "top_shrinking_platforms = shrinking_platforms.head(5)\n",
    "\n",
    "print(\"Top 5 shrinking platforms by sales (2014-2016):\")\n",
    "print(top_shrinking_platforms)\n",
    "\n",
    "# Data Visualization\n",
    "plt.figure(figsize=(10, 6))\n",
    "plt.barh(top_shrinking_platforms.index, top_shrinking_platforms.values, color='red')\n",
    "plt.xlabel(\"Average Percentage Change in Sales\")\n",
    "plt.ylabel(\"Platform\")\n",
    "plt.title(\"Top 5 Shrinking Platforms by Sales (2014-2016)\")\n",
    "plt.grid(True)\n",
    "plt.tight_layout()\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### The above figure shows the platforms with the lowest percentage of sales. The highest is Wii with -76.90% then X360 with -76.43%, then PSP -75.00%, then PS3 -71.68%, then WiiU with -48.82%. "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<div class=\"alert alert-block alert-warning\"> <b>Reviewer's comment</b> <a \n",
    "class=\"tocSkip\"></a>\n",
    "    \n",
    "~~There is not need to create df_relevant again~~ </div>"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Leading platforms (2014-2016):\n",
      "    platform  total_sales\n",
      "18      PS4       288.15\n",
      "30     XOne       140.36\n",
      "2       3DS        86.68\n",
      "17      PS3        68.18\n",
      "28     X360        48.22\n",
      "\n",
      "Leading platforms (overall):\n",
      "    platform  total_sales\n",
      "16      PS2      1255.77\n",
      "28     X360       971.42\n",
      "17      PS3       939.65\n",
      "26      Wii       907.51\n",
      "4        DS       806.12\n"
     ]
    }
   ],
   "source": [
    "# Analyze Data\n",
    "\n",
    "# Total sales for each platform between 2014 and 2016\n",
    "platform_sales_2014_2016 = df_2014_2016.groupby('platform')['total_sales'].sum().reset_index()\n",
    "platform_sales_2014_2016 = platform_sales_2014_2016.sort_values('total_sales', ascending=False)\n",
    "\n",
    "print(\"Leading platforms (2014-2016):\\n\", platform_sales_2014_2016.head(5))\n",
    "\n",
    "# Total sales for each platform over the entire timeframe\n",
    "total_platform_sales = df.groupby('platform')['total_sales'].sum().reset_index()\n",
    "total_platform_sales = total_platform_sales.sort_values('total_sales', ascending=False)\n",
    "\n",
    "print(\"\\nLeading platforms (overall):\\n\", total_platform_sales.head(5))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 864x432 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Data Visualization\n",
    "\n",
    "# Build a box plot for the global sales of all games, broken down by platform. Are the differences in sales significant? What about average sales on various platforms? Describe your findings.\n",
    "\n",
    "# Filter data from 2014 to 2016\n",
    "df_relevant = df[(df[\"year_of_release\"] >= 2014) & (df[\"year_of_release\"] <= 2016)]\n",
    "\n",
    "# Create a box plot for global sales by platform\n",
    "plt.figure(figsize=(12, 6))\n",
    "plt.boxplot([df_relevant[df_relevant[\"platform\"] == platform][\"total_sales\"] for platform in df_relevant[\"platform\"].unique()], labels=df_relevant[\"platform\"].unique())\n",
    "plt.xlabel(\"Platform\")\n",
    "plt.ylabel(\"Global Sales\")\n",
    "plt.title(\"Global Sales by Platform (2014-2016)\")\n",
    "plt.xticks(rotation=45)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<div class=\"alert alert-block alert-warning\"> <b>Reviewer's comment</b> <a \n",
    "class=\"tocSkip\"></a>\n",
    "Please use plt.ylim(0,3) that we can see boxplots and not outliers</div>"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### According to the above figure, the differences in sales is significant between the games of the different platforms. The highest platforms by global sales between 2014 and 2016 is PS4 with more than 14 million dollars and the lowest is PSP with approximately 1 million dollars."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Average Global Sales by Platform (2014-2016):\n",
      "platform\n",
      "PS4     0.766356\n",
      "XOne    0.615614\n",
      "WiiU    0.588767\n",
      "Wii     0.460909\n",
      "X360    0.434414\n",
      "3DS     0.408868\n",
      "PS3     0.311324\n",
      "PC      0.179139\n",
      "PSV     0.075932\n",
      "PSP     0.027692\n",
      "2600         NaN\n",
      "3DO          NaN\n",
      "DC           NaN\n",
      "DS           NaN\n",
      "GB           NaN\n",
      "GBA          NaN\n",
      "GC           NaN\n",
      "GEN          NaN\n",
      "GG           NaN\n",
      "N64          NaN\n",
      "NES          NaN\n",
      "NG           NaN\n",
      "PCFX         NaN\n",
      "PS           NaN\n",
      "PS2          NaN\n",
      "SAT          NaN\n",
      "SCD          NaN\n",
      "SNES         NaN\n",
      "TG16         NaN\n",
      "WS           NaN\n",
      "XB           NaN\n",
      "Name: total_sales, dtype: float64\n"
     ]
    }
   ],
   "source": [
    "# Analyze Data\n",
    "\n",
    "# Calculate average global sales for each platform\n",
    "platform_avg_sales = df_relevant.groupby(\"platform\")[\"total_sales\"].mean().sort_values(ascending=False)\n",
    "\n",
    "print(\"Average Global Sales by Platform (2014-2016):\")\n",
    "print(platform_avg_sales)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### The top 5 Average Global Sales by Platforms between the years 2014 and 2016 are X360, PS4, PS3, XOne, WiiU."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 576x432 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Data Visualization\n",
    "\n",
    "# Filter data for PS4 platform\n",
    "df_ps4 = df[df[\"platform\"] == \"PS4\"]\n",
    "\n",
    "# Scatter plot for user reviews vs. total sales\n",
    "plt.figure(figsize=(8, 6))\n",
    "sns.scatterplot(x=\"user_score\", y=\"total_sales\", data=df_ps4)\n",
    "plt.xlabel(\"User Review Score\")\n",
    "plt.ylabel(\"Total Sales\")\n",
    "plt.title(\"User Reviews vs. Total Sales (PS4)\")\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### By analyzing the above scatterplot, there is a strong relationship between user reviews and total sales. For instance, when the user reviews are high, the total sales is high. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 576x432 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Data Visualization\n",
    "\n",
    "# Scatter plot for professional reviews vs. total sales\n",
    "plt.figure(figsize=(8, 6))\n",
    "sns.scatterplot(x=\"critic_score\", y=\"total_sales\", data=df_ps4)\n",
    "plt.xlabel(\"Professional Review Score\")\n",
    "plt.ylabel(\"Total Sales\")\n",
    "plt.title(\"Professional Reviews vs. Total Sales (PS4)\")\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<div class=\"alert alert-block alert-success\"> <b>Reviewer's comment</b> <a \n",
    "class=\"tocSkip\"></a>\n",
    "Nice scatterplots You also can check sns.pairplot from seaborn</div>"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### The relationship between total sales and professional reviews is strong than that with user reviews. If the reviews are less than 70/100 it drives much less sales if it was higher than that score."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Correlation between user_score and total_sales: 0.08817911987579136\n"
     ]
    }
   ],
   "source": [
    "# Analyze Data\n",
    "\n",
    "# Take a look at how user and professional reviews affect sales for one popular platform (you choose). Build a scatter plot and calculate the correlation between reviews and sales. Draw conclusions.\n",
    "\n",
    "# working code\n",
    "\n",
    "corr = df['user_score'].corr(df['total_sales'])\n",
    "print(f\"Correlation between user_score and total_sales: {corr}\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### The correlation between user score and total sales is 0.08 which indicates that there is a positive relations which means as user score increases, total sales tends to increase slightly as well but it is a very weak relation because it is closer to 0."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "8578\n"
     ]
    }
   ],
   "source": [
    "# working code\n",
    "\n",
    "print(df['critic_score'].isnull().sum())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0\n"
     ]
    }
   ],
   "source": [
    "# working code\n",
    "\n",
    "print(df['total_sales'].isnull().sum())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Convert critic_score to integer data type, preserving NaN values\n",
    "\n",
    "# working code\n",
    "\n",
    "df['critic_score'] = pd.to_numeric(df['critic_score'], errors='coerce')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "float64\n",
      "8578\n"
     ]
    }
   ],
   "source": [
    "# working code\n",
    "\n",
    "print(df['critic_score'].dtype)  # Should print 'int64'\n",
    "print(df['critic_score'].isna().sum())  # Should print the number of NaN values in the column"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Correlation between critic_score and total_sales: 0.24550668717736324\n"
     ]
    }
   ],
   "source": [
    "# Analyze Data\n",
    "\n",
    "# working code\n",
    "\n",
    "corr = df['critic_score'].corr(df['total_sales'])\n",
    "\n",
    "print(f\"Correlation between critic_score and total_sales: {corr}\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### The correlation between critic score and total sales is 0.24 which indicates a positive relationship between them but it is a weak relation. This means that as the critic score increases the total sales increase."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<div class=\"alert alert-block alert-danger\">\n",
    "<b>Reviewer's comment</b> <a class=\"tocSkip\"></a>\n",
    "    \n",
    "~~Here and further - please use data only for relevant period~~\n",
    "    \n",
    "\n",
    "</div>"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<div class=\"alert alert-block alert-success\"> <b>Reviewer's comment v2</b> <a \n",
    "class=\"tocSkip\"></a>\n",
    "Done</div>"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Top 10 games by total sales (2014-2016):\n",
      "                                            name platform  na_sales  eu_sales  \\\n",
      "3397                   Call of Duty: Black Ops 3      PS4      6.03      5.86   \n",
      "10186                         Grand Theft Auto V      PS4      3.96      6.31   \n",
      "18571  Pokemon Omega Ruby/Pokemon Alpha Sapphire      3DS      4.35      3.49   \n",
      "7954                                     FIFA 16      PS4      1.12      6.12   \n",
      "22989               Star Wars Battlefront (2015)      PS4      2.99      3.49   \n",
      "3366              Call of Duty: Advanced Warfare      PS4      2.81      3.48   \n",
      "7985                                     FIFA 17      PS4      0.66      5.75   \n",
      "23810        Super Smash Bros. for Wii U and 3DS      3DS      3.27      1.37   \n",
      "3409                   Call of Duty: Black Ops 3     XOne      4.59      2.11   \n",
      "8078                                   Fallout 4      PS4      2.53      3.27   \n",
      "\n",
      "       jp_sales  other_sales  total_sales  \n",
      "3397       0.36         2.38        14.63  \n",
      "10186      0.38         1.97        12.62  \n",
      "18571      3.10         0.74        11.68  \n",
      "7954       0.06         1.28         8.58  \n",
      "22989      0.22         1.28         7.98  \n",
      "3366       0.14         1.23         7.66  \n",
      "7985       0.08         1.11         7.60  \n",
      "23810      2.43         0.48         7.55  \n",
      "3409       0.01         0.68         7.39  \n",
      "8078       0.24         1.13         7.17  \n"
     ]
    }
   ],
   "source": [
    "# Analyze data\n",
    "\n",
    "# Keeping your conclusions in mind, compare the sales of the same games on other platforms from year 2014 to 2016.\n",
    "\n",
    "# working code\n",
    "\n",
    "# Filtering the data for the years 2014 to 2016\n",
    "df_2014_2016 = df[(df['year_of_release'] >= 2014) & (df['year_of_release'] <= 2016)]\n",
    "\n",
    "# Grouping\n",
    "game_sales_by_platform = df_2014_2016.groupby(['name', 'platform'])[['na_sales', 'eu_sales', 'jp_sales', 'other_sales', 'total_sales']].sum().reset_index()\n",
    "\n",
    "# Sorting\n",
    "game_sales_by_platform = game_sales_by_platform.sort_values('total_sales', ascending=False)\n",
    "\n",
    "# Printing the top 10 games by total sales\n",
    "print(\"Top 10 games by total sales (2014-2016):\")\n",
    "print(game_sales_by_platform.head(10))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                           name platform  na_sales  eu_sales  jp_sales  \\\n",
      "3397  Call of Duty: Black Ops 3      PS4      6.03      5.86      0.36   \n",
      "3409  Call of Duty: Black Ops 3     XOne      4.59      2.11      0.01   \n",
      "3407  Call of Duty: Black Ops 3     X360      1.14      0.40      0.00   \n",
      "3396  Call of Duty: Black Ops 3      PS3      0.49      0.87      0.07   \n",
      "3392  Call of Duty: Black Ops 3       PC      0.00      0.25      0.00   \n",
      "3408  Call of Duty: Black Ops 3       XB      0.00      0.00      0.00   \n",
      "3406  Call of Duty: Black Ops 3     WiiU      0.00      0.00      0.00   \n",
      "3405  Call of Duty: Black Ops 3      Wii      0.00      0.00      0.00   \n",
      "3404  Call of Duty: Black Ops 3       WS      0.00      0.00      0.00   \n",
      "3403  Call of Duty: Black Ops 3     TG16      0.00      0.00      0.00   \n",
      "3402  Call of Duty: Black Ops 3     SNES      0.00      0.00      0.00   \n",
      "3401  Call of Duty: Black Ops 3      SCD      0.00      0.00      0.00   \n",
      "3400  Call of Duty: Black Ops 3      SAT      0.00      0.00      0.00   \n",
      "3399  Call of Duty: Black Ops 3      PSV      0.00      0.00      0.00   \n",
      "3398  Call of Duty: Black Ops 3      PSP      0.00      0.00      0.00   \n",
      "3395  Call of Duty: Black Ops 3      PS2      0.00      0.00      0.00   \n",
      "3394  Call of Duty: Black Ops 3       PS      0.00      0.00      0.00   \n",
      "3393  Call of Duty: Black Ops 3     PCFX      0.00      0.00      0.00   \n",
      "3391  Call of Duty: Black Ops 3       NG      0.00      0.00      0.00   \n",
      "3390  Call of Duty: Black Ops 3      NES      0.00      0.00      0.00   \n",
      "3389  Call of Duty: Black Ops 3      N64      0.00      0.00      0.00   \n",
      "3388  Call of Duty: Black Ops 3       GG      0.00      0.00      0.00   \n",
      "3387  Call of Duty: Black Ops 3      GEN      0.00      0.00      0.00   \n",
      "3386  Call of Duty: Black Ops 3       GC      0.00      0.00      0.00   \n",
      "3385  Call of Duty: Black Ops 3      GBA      0.00      0.00      0.00   \n",
      "3384  Call of Duty: Black Ops 3       GB      0.00      0.00      0.00   \n",
      "3383  Call of Duty: Black Ops 3       DS      0.00      0.00      0.00   \n",
      "3382  Call of Duty: Black Ops 3       DC      0.00      0.00      0.00   \n",
      "3381  Call of Duty: Black Ops 3      3DS      0.00      0.00      0.00   \n",
      "3380  Call of Duty: Black Ops 3      3DO      0.00      0.00      0.00   \n",
      "3379  Call of Duty: Black Ops 3     2600      0.00      0.00      0.00   \n",
      "\n",
      "      other_sales  total_sales  \n",
      "3397         2.38        14.63  \n",
      "3409         0.68         7.39  \n",
      "3407         0.16         1.70  \n",
      "3396         0.26         1.69  \n",
      "3392         0.01         0.26  \n",
      "3408         0.00         0.00  \n",
      "3406         0.00         0.00  \n",
      "3405         0.00         0.00  \n",
      "3404         0.00         0.00  \n",
      "3403         0.00         0.00  \n",
      "3402         0.00         0.00  \n",
      "3401         0.00         0.00  \n",
      "3400         0.00         0.00  \n",
      "3399         0.00         0.00  \n",
      "3398         0.00         0.00  \n",
      "3395         0.00         0.00  \n",
      "3394         0.00         0.00  \n",
      "3393         0.00         0.00  \n",
      "3391         0.00         0.00  \n",
      "3390         0.00         0.00  \n",
      "3389         0.00         0.00  \n",
      "3388         0.00         0.00  \n",
      "3387         0.00         0.00  \n",
      "3386         0.00         0.00  \n",
      "3385         0.00         0.00  \n",
      "3384         0.00         0.00  \n",
      "3383         0.00         0.00  \n",
      "3382         0.00         0.00  \n",
      "3381         0.00         0.00  \n",
      "3380         0.00         0.00  \n",
      "3379         0.00         0.00  \n"
     ]
    }
   ],
   "source": [
    "# Analyze data\n",
    "\n",
    "# working code\n",
    "\n",
    "game_sales_by_name = game_sales_by_platform.groupby('name')\n",
    "print(game_sales_by_name.get_group('Call of Duty: Black Ops 3'))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### The highest total sales for the game Call of Duty: Black Ops 3 comes from the PS4 platform with total sales of 14.63 then with XOne with 7.39."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                     name platform  na_sales  eu_sales  jp_sales  other_sales  \\\n",
      "10186  Grand Theft Auto V      PS4      3.96      6.31      0.38         1.97   \n",
      "10198  Grand Theft Auto V     XOne      2.81      2.19      0.00         0.47   \n",
      "10181  Grand Theft Auto V       PC      0.39      0.69      0.00         0.09   \n",
      "10184  Grand Theft Auto V      PS2      0.00      0.00      0.00         0.00   \n",
      "10196  Grand Theft Auto V     X360      0.00      0.00      0.00         0.00   \n",
      "10195  Grand Theft Auto V     WiiU      0.00      0.00      0.00         0.00   \n",
      "10194  Grand Theft Auto V      Wii      0.00      0.00      0.00         0.00   \n",
      "10193  Grand Theft Auto V       WS      0.00      0.00      0.00         0.00   \n",
      "10192  Grand Theft Auto V     TG16      0.00      0.00      0.00         0.00   \n",
      "10191  Grand Theft Auto V     SNES      0.00      0.00      0.00         0.00   \n",
      "10190  Grand Theft Auto V      SCD      0.00      0.00      0.00         0.00   \n",
      "10189  Grand Theft Auto V      SAT      0.00      0.00      0.00         0.00   \n",
      "10188  Grand Theft Auto V      PSV      0.00      0.00      0.00         0.00   \n",
      "10187  Grand Theft Auto V      PSP      0.00      0.00      0.00         0.00   \n",
      "10185  Grand Theft Auto V      PS3      0.00      0.00      0.00         0.00   \n",
      "10183  Grand Theft Auto V       PS      0.00      0.00      0.00         0.00   \n",
      "10182  Grand Theft Auto V     PCFX      0.00      0.00      0.00         0.00   \n",
      "10180  Grand Theft Auto V       NG      0.00      0.00      0.00         0.00   \n",
      "10179  Grand Theft Auto V      NES      0.00      0.00      0.00         0.00   \n",
      "10178  Grand Theft Auto V      N64      0.00      0.00      0.00         0.00   \n",
      "10177  Grand Theft Auto V       GG      0.00      0.00      0.00         0.00   \n",
      "10176  Grand Theft Auto V      GEN      0.00      0.00      0.00         0.00   \n",
      "10175  Grand Theft Auto V       GC      0.00      0.00      0.00         0.00   \n",
      "10174  Grand Theft Auto V      GBA      0.00      0.00      0.00         0.00   \n",
      "10173  Grand Theft Auto V       GB      0.00      0.00      0.00         0.00   \n",
      "10172  Grand Theft Auto V       DS      0.00      0.00      0.00         0.00   \n",
      "10171  Grand Theft Auto V       DC      0.00      0.00      0.00         0.00   \n",
      "10197  Grand Theft Auto V       XB      0.00      0.00      0.00         0.00   \n",
      "10169  Grand Theft Auto V      3DO      0.00      0.00      0.00         0.00   \n",
      "10170  Grand Theft Auto V      3DS      0.00      0.00      0.00         0.00   \n",
      "10168  Grand Theft Auto V     2600      0.00      0.00      0.00         0.00   \n",
      "\n",
      "       total_sales  \n",
      "10186        12.62  \n",
      "10198         5.47  \n",
      "10181         1.17  \n",
      "10184         0.00  \n",
      "10196         0.00  \n",
      "10195         0.00  \n",
      "10194         0.00  \n",
      "10193         0.00  \n",
      "10192         0.00  \n",
      "10191         0.00  \n",
      "10190         0.00  \n",
      "10189         0.00  \n",
      "10188         0.00  \n",
      "10187         0.00  \n",
      "10185         0.00  \n",
      "10183         0.00  \n",
      "10182         0.00  \n",
      "10180         0.00  \n",
      "10179         0.00  \n",
      "10178         0.00  \n",
      "10177         0.00  \n",
      "10176         0.00  \n",
      "10175         0.00  \n",
      "10174         0.00  \n",
      "10173         0.00  \n",
      "10172         0.00  \n",
      "10171         0.00  \n",
      "10197         0.00  \n",
      "10169         0.00  \n",
      "10170         0.00  \n",
      "10168         0.00  \n"
     ]
    }
   ],
   "source": [
    "# Analyze data\n",
    "\n",
    "# working code\n",
    "\n",
    "game_sales_by_name = game_sales_by_platform.groupby('name')\n",
    "print(game_sales_by_name.get_group('Grand Theft Auto V'))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### The highest total sales for the game Grand Theft Auto V comes from the Wii platform with total sales of 12.62."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                                            name platform  na_sales  eu_sales  \\\n",
      "18571  Pokemon Omega Ruby/Pokemon Alpha Sapphire      3DS      4.35      3.49   \n",
      "18570  Pokemon Omega Ruby/Pokemon Alpha Sapphire      3DO      0.00      0.00   \n",
      "18582  Pokemon Omega Ruby/Pokemon Alpha Sapphire       PC      0.00      0.00   \n",
      "18581  Pokemon Omega Ruby/Pokemon Alpha Sapphire       NG      0.00      0.00   \n",
      "18580  Pokemon Omega Ruby/Pokemon Alpha Sapphire      NES      0.00      0.00   \n",
      "18579  Pokemon Omega Ruby/Pokemon Alpha Sapphire      N64      0.00      0.00   \n",
      "18578  Pokemon Omega Ruby/Pokemon Alpha Sapphire       GG      0.00      0.00   \n",
      "18577  Pokemon Omega Ruby/Pokemon Alpha Sapphire      GEN      0.00      0.00   \n",
      "18576  Pokemon Omega Ruby/Pokemon Alpha Sapphire       GC      0.00      0.00   \n",
      "18575  Pokemon Omega Ruby/Pokemon Alpha Sapphire      GBA      0.00      0.00   \n",
      "18574  Pokemon Omega Ruby/Pokemon Alpha Sapphire       GB      0.00      0.00   \n",
      "18573  Pokemon Omega Ruby/Pokemon Alpha Sapphire       DS      0.00      0.00   \n",
      "18572  Pokemon Omega Ruby/Pokemon Alpha Sapphire       DC      0.00      0.00   \n",
      "18569  Pokemon Omega Ruby/Pokemon Alpha Sapphire     2600      0.00      0.00   \n",
      "18583  Pokemon Omega Ruby/Pokemon Alpha Sapphire     PCFX      0.00      0.00   \n",
      "18584  Pokemon Omega Ruby/Pokemon Alpha Sapphire       PS      0.00      0.00   \n",
      "18585  Pokemon Omega Ruby/Pokemon Alpha Sapphire      PS2      0.00      0.00   \n",
      "18586  Pokemon Omega Ruby/Pokemon Alpha Sapphire      PS3      0.00      0.00   \n",
      "18599  Pokemon Omega Ruby/Pokemon Alpha Sapphire     XOne      0.00      0.00   \n",
      "18598  Pokemon Omega Ruby/Pokemon Alpha Sapphire       XB      0.00      0.00   \n",
      "18597  Pokemon Omega Ruby/Pokemon Alpha Sapphire     X360      0.00      0.00   \n",
      "18596  Pokemon Omega Ruby/Pokemon Alpha Sapphire     WiiU      0.00      0.00   \n",
      "18595  Pokemon Omega Ruby/Pokemon Alpha Sapphire      Wii      0.00      0.00   \n",
      "18594  Pokemon Omega Ruby/Pokemon Alpha Sapphire       WS      0.00      0.00   \n",
      "18593  Pokemon Omega Ruby/Pokemon Alpha Sapphire     TG16      0.00      0.00   \n",
      "18592  Pokemon Omega Ruby/Pokemon Alpha Sapphire     SNES      0.00      0.00   \n",
      "18591  Pokemon Omega Ruby/Pokemon Alpha Sapphire      SCD      0.00      0.00   \n",
      "18590  Pokemon Omega Ruby/Pokemon Alpha Sapphire      SAT      0.00      0.00   \n",
      "18589  Pokemon Omega Ruby/Pokemon Alpha Sapphire      PSV      0.00      0.00   \n",
      "18588  Pokemon Omega Ruby/Pokemon Alpha Sapphire      PSP      0.00      0.00   \n",
      "18587  Pokemon Omega Ruby/Pokemon Alpha Sapphire      PS4      0.00      0.00   \n",
      "\n",
      "       jp_sales  other_sales  total_sales  \n",
      "18571       3.1         0.74        11.68  \n",
      "18570       0.0         0.00         0.00  \n",
      "18582       0.0         0.00         0.00  \n",
      "18581       0.0         0.00         0.00  \n",
      "18580       0.0         0.00         0.00  \n",
      "18579       0.0         0.00         0.00  \n",
      "18578       0.0         0.00         0.00  \n",
      "18577       0.0         0.00         0.00  \n",
      "18576       0.0         0.00         0.00  \n",
      "18575       0.0         0.00         0.00  \n",
      "18574       0.0         0.00         0.00  \n",
      "18573       0.0         0.00         0.00  \n",
      "18572       0.0         0.00         0.00  \n",
      "18569       0.0         0.00         0.00  \n",
      "18583       0.0         0.00         0.00  \n",
      "18584       0.0         0.00         0.00  \n",
      "18585       0.0         0.00         0.00  \n",
      "18586       0.0         0.00         0.00  \n",
      "18599       0.0         0.00         0.00  \n",
      "18598       0.0         0.00         0.00  \n",
      "18597       0.0         0.00         0.00  \n",
      "18596       0.0         0.00         0.00  \n",
      "18595       0.0         0.00         0.00  \n",
      "18594       0.0         0.00         0.00  \n",
      "18593       0.0         0.00         0.00  \n",
      "18592       0.0         0.00         0.00  \n",
      "18591       0.0         0.00         0.00  \n",
      "18590       0.0         0.00         0.00  \n",
      "18589       0.0         0.00         0.00  \n",
      "18588       0.0         0.00         0.00  \n",
      "18587       0.0         0.00         0.00  \n"
     ]
    }
   ],
   "source": [
    "# Analyze data\n",
    "\n",
    "# working code\n",
    "\n",
    "game_sales_by_name = game_sales_by_platform.groupby('name')\n",
    "print(game_sales_by_name.get_group('Pokemon Omega Ruby/Pokemon Alpha Sapphire'))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### The highest total sales for the game Pokemon Omega Ruby/Pokemon Alpha Sapphire comes from the 3DS platform with total sales of 11.68."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "         name platform  na_sales  eu_sales  jp_sales  other_sales  total_sales\n",
      "7954  FIFA 16      PS4      1.12      6.12      0.06         1.28         8.58\n",
      "7966  FIFA 16     XOne      0.89      2.12      0.00         0.24         3.25\n",
      "7953  FIFA 16      PS3      0.41      1.84      0.05         0.40         2.70\n",
      "7964  FIFA 16     X360      0.57      0.88      0.00         0.12         1.57\n",
      "7949  FIFA 16       PC      0.06      0.13      0.00         0.01         0.20\n",
      "7947  FIFA 16      NES      0.00      0.00      0.00         0.00         0.00\n",
      "7946  FIFA 16      N64      0.00      0.00      0.00         0.00         0.00\n",
      "7945  FIFA 16       GG      0.00      0.00      0.00         0.00         0.00\n",
      "7944  FIFA 16      GEN      0.00      0.00      0.00         0.00         0.00\n",
      "7943  FIFA 16       GC      0.00      0.00      0.00         0.00         0.00\n",
      "7942  FIFA 16      GBA      0.00      0.00      0.00         0.00         0.00\n",
      "7941  FIFA 16       GB      0.00      0.00      0.00         0.00         0.00\n",
      "7940  FIFA 16       DS      0.00      0.00      0.00         0.00         0.00\n",
      "7939  FIFA 16       DC      0.00      0.00      0.00         0.00         0.00\n",
      "7938  FIFA 16      3DS      0.00      0.00      0.00         0.00         0.00\n",
      "7937  FIFA 16      3DO      0.00      0.00      0.00         0.00         0.00\n",
      "7936  FIFA 16     2600      0.00      0.00      0.00         0.00         0.00\n",
      "7948  FIFA 16       NG      0.00      0.00      0.00         0.00         0.00\n",
      "7950  FIFA 16     PCFX      0.00      0.00      0.00         0.00         0.00\n",
      "7951  FIFA 16       PS      0.00      0.00      0.00         0.00         0.00\n",
      "7952  FIFA 16      PS2      0.00      0.00      0.00         0.00         0.00\n",
      "7965  FIFA 16       XB      0.00      0.00      0.00         0.00         0.00\n",
      "7963  FIFA 16     WiiU      0.00      0.00      0.00         0.00         0.00\n",
      "7962  FIFA 16      Wii      0.00      0.00      0.00         0.00         0.00\n",
      "7961  FIFA 16       WS      0.00      0.00      0.00         0.00         0.00\n",
      "7960  FIFA 16     TG16      0.00      0.00      0.00         0.00         0.00\n",
      "7959  FIFA 16     SNES      0.00      0.00      0.00         0.00         0.00\n",
      "7958  FIFA 16      SCD      0.00      0.00      0.00         0.00         0.00\n",
      "7957  FIFA 16      SAT      0.00      0.00      0.00         0.00         0.00\n",
      "7956  FIFA 16      PSV      0.00      0.00      0.00         0.00         0.00\n",
      "7955  FIFA 16      PSP      0.00      0.00      0.00         0.00         0.00\n"
     ]
    }
   ],
   "source": [
    "# Analyze data\n",
    "\n",
    "# working code\n",
    "\n",
    "game_sales_by_name = game_sales_by_platform.groupby('name')\n",
    "print(game_sales_by_name.get_group('FIFA 16'))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### The highest total sales for the game FIFA 16 comes from the PS4 platform with total sales of 8.85."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                               name platform  na_sales  eu_sales  jp_sales  \\\n",
      "22989  Star Wars Battlefront (2015)      PS4      2.99      3.49      0.22   \n",
      "23001  Star Wars Battlefront (2015)     XOne      2.04      1.28      0.02   \n",
      "22984  Star Wars Battlefront (2015)       PC      0.13      0.38      0.00   \n",
      "22987  Star Wars Battlefront (2015)      PS2      0.00      0.00      0.00   \n",
      "23000  Star Wars Battlefront (2015)       XB      0.00      0.00      0.00   \n",
      "22999  Star Wars Battlefront (2015)     X360      0.00      0.00      0.00   \n",
      "22998  Star Wars Battlefront (2015)     WiiU      0.00      0.00      0.00   \n",
      "22997  Star Wars Battlefront (2015)      Wii      0.00      0.00      0.00   \n",
      "22996  Star Wars Battlefront (2015)       WS      0.00      0.00      0.00   \n",
      "22995  Star Wars Battlefront (2015)     TG16      0.00      0.00      0.00   \n",
      "22994  Star Wars Battlefront (2015)     SNES      0.00      0.00      0.00   \n",
      "22993  Star Wars Battlefront (2015)      SCD      0.00      0.00      0.00   \n",
      "22992  Star Wars Battlefront (2015)      SAT      0.00      0.00      0.00   \n",
      "22991  Star Wars Battlefront (2015)      PSV      0.00      0.00      0.00   \n",
      "22990  Star Wars Battlefront (2015)      PSP      0.00      0.00      0.00   \n",
      "22988  Star Wars Battlefront (2015)      PS3      0.00      0.00      0.00   \n",
      "22986  Star Wars Battlefront (2015)       PS      0.00      0.00      0.00   \n",
      "22985  Star Wars Battlefront (2015)     PCFX      0.00      0.00      0.00   \n",
      "22972  Star Wars Battlefront (2015)      3DO      0.00      0.00      0.00   \n",
      "22983  Star Wars Battlefront (2015)       NG      0.00      0.00      0.00   \n",
      "22982  Star Wars Battlefront (2015)      NES      0.00      0.00      0.00   \n",
      "22981  Star Wars Battlefront (2015)      N64      0.00      0.00      0.00   \n",
      "22980  Star Wars Battlefront (2015)       GG      0.00      0.00      0.00   \n",
      "22979  Star Wars Battlefront (2015)      GEN      0.00      0.00      0.00   \n",
      "22978  Star Wars Battlefront (2015)       GC      0.00      0.00      0.00   \n",
      "22977  Star Wars Battlefront (2015)      GBA      0.00      0.00      0.00   \n",
      "22976  Star Wars Battlefront (2015)       GB      0.00      0.00      0.00   \n",
      "22975  Star Wars Battlefront (2015)       DS      0.00      0.00      0.00   \n",
      "22974  Star Wars Battlefront (2015)       DC      0.00      0.00      0.00   \n",
      "22973  Star Wars Battlefront (2015)      3DS      0.00      0.00      0.00   \n",
      "22971  Star Wars Battlefront (2015)     2600      0.00      0.00      0.00   \n",
      "\n",
      "       other_sales  total_sales  \n",
      "22989         1.28         7.98  \n",
      "23001         0.32         3.66  \n",
      "22984         0.04         0.55  \n",
      "22987         0.00         0.00  \n",
      "23000         0.00         0.00  \n",
      "22999         0.00         0.00  \n",
      "22998         0.00         0.00  \n",
      "22997         0.00         0.00  \n",
      "22996         0.00         0.00  \n",
      "22995         0.00         0.00  \n",
      "22994         0.00         0.00  \n",
      "22993         0.00         0.00  \n",
      "22992         0.00         0.00  \n",
      "22991         0.00         0.00  \n",
      "22990         0.00         0.00  \n",
      "22988         0.00         0.00  \n",
      "22986         0.00         0.00  \n",
      "22985         0.00         0.00  \n",
      "22972         0.00         0.00  \n",
      "22983         0.00         0.00  \n",
      "22982         0.00         0.00  \n",
      "22981         0.00         0.00  \n",
      "22980         0.00         0.00  \n",
      "22979         0.00         0.00  \n",
      "22978         0.00         0.00  \n",
      "22977         0.00         0.00  \n",
      "22976         0.00         0.00  \n",
      "22975         0.00         0.00  \n",
      "22974         0.00         0.00  \n",
      "22973         0.00         0.00  \n",
      "22971         0.00         0.00  \n"
     ]
    }
   ],
   "source": [
    "# Analyze data\n",
    "\n",
    "# working code\n",
    "\n",
    "game_sales_by_name = game_sales_by_platform.groupby('name')\n",
    "print(game_sales_by_name.get_group('Star Wars Battlefront (2015)'))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### The highest total sales for the game Star Wars Battlefront (2015) comes from the PS4 platform with 7.98."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Total sales by genre (2014-2016):\n",
      "           genre  total_sales\n",
      "0         Action       199.36\n",
      "8        Shooter       170.94\n",
      "10        Sports       109.48\n",
      "7   Role-Playing       101.44\n",
      "3           Misc        37.55\n",
      "2       Fighting        28.22\n",
      "6         Racing        27.52\n",
      "4       Platform        18.09\n",
      "1      Adventure        17.55\n",
      "9     Simulation        13.13\n",
      "11      Strategy         3.96\n",
      "5         Puzzle         2.21\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x432 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Analyze data\n",
    "\n",
    "# Take a look at the general distribution of games by genre. What can we say about the most profitable genres? Can you generalize about genres with high and low sales?\n",
    "\n",
    "# From year 2014 to 2016\n",
    "\n",
    "# Grouping by genre and calculating the total sales\n",
    "genre_sales = df_2014_2016.groupby('genre')['total_sales'].sum().reset_index()\n",
    "\n",
    "# Sorting the genres by total sales in descending order\n",
    "genre_sales = genre_sales.sort_values('total_sales', ascending=False)\n",
    "\n",
    "print(\"Total sales by genre (2014-2016):\")\n",
    "print(genre_sales)\n",
    "\n",
    "# Boxplot Data Visualization\n",
    "plt.figure(figsize=(10, 6))\n",
    "\n",
    "plt.boxplot([df_2014_2016[df_2014_2016['genre'] == genre]['total_sales'] for genre in genre_sales['genre']])\n",
    "\n",
    "plt.xticks(range(1, len(genre_sales['genre']) + 1), genre_sales['genre'], rotation=45)\n",
    "plt.xlabel('Genre')\n",
    "plt.ylabel('Total Sales')\n",
    "plt.title('Total Sales by Genre (2014-2016)')\n",
    "plt.grid(True)\n",
    "plt.tight_layout()\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### The Boxplot shows that the genre with the highest total sales is Action with 199.36 million dollars then comes Shooter with 170.94 million dollars and the least is Puzzle genre with 2.21 million dollars."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<div class=\"alert alert-block alert-danger\">\n",
    "<b>Reviewer's comment</b> <a class=\"tocSkip\"></a>\n",
    "    \n",
    "~~We need to take into account the impact of outliers Please add boxplot for total sales broken by genres~~\n",
    "\n",
    "</div>"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<div class=\"alert alert-block alert-success\"> <b>Reviewer's comment v2</b> <a \n",
    "class=\"tocSkip\"></a>\n",
    "Super</div>"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Top 5 platforms in NA (2014-2016):\n",
      "    platform  na_sales\n",
      "18      PS4     98.61\n",
      "30     XOne     81.27\n",
      "28     X360     28.30\n",
      "2       3DS     22.64\n",
      "17      PS3     22.05\n",
      "\n",
      "Top 5 platforms in EU (2014-2016):\n",
      "    platform  eu_sales\n",
      "18      PS4    130.04\n",
      "30     XOne     46.25\n",
      "17      PS3     25.54\n",
      "13       PC     17.97\n",
      "2       3DS     16.12\n",
      "\n",
      "Top 5 platforms in JP (2014-2016):\n",
      "    platform  jp_sales\n",
      "2       3DS     44.24\n",
      "18      PS4     15.02\n",
      "20      PSV     14.54\n",
      "17      PS3     11.22\n",
      "27     WiiU      7.31\n",
      "\n",
      "Market shares of top platforms in NA (2014-2016):\n",
      "    platform  market_share\n",
      "18      PS4     38.996322\n",
      "30     XOne     32.139044\n",
      "28     X360     11.191521\n",
      "2       3DS      8.953217\n",
      "17      PS3      8.719896\n",
      "\n",
      "Market shares of top platforms in EU (2014-2016):\n",
      "    platform  market_share\n",
      "18      PS4     55.120380\n",
      "30     XOne     19.604103\n",
      "17      PS3     10.825704\n",
      "13       PC      7.616989\n",
      "2       3DS      6.832825\n",
      "\n",
      "Market shares of top platforms in JP (2014-2016):\n",
      "    platform  market_share\n",
      "2       3DS     47.915087\n",
      "18      PS4     16.267735\n",
      "20      PSV     15.747861\n",
      "17      PS3     12.152063\n",
      "27     WiiU      7.917253\n"
     ]
    }
   ],
   "source": [
    "# Step 4. Create a user profile for each region for the time between 2014 and 2016.\n",
    "\n",
    "# For each region (NA, EU, JP), determine: The top five platforms. Describe variations in their market shares from region to region\n",
    "\n",
    "# Grouping\n",
    "platform_sales = df_2014_2016.groupby('platform')[['na_sales', 'eu_sales', 'jp_sales']].sum().reset_index()\n",
    "\n",
    "# Top 5 platforms for each region\n",
    "na_top_platforms = platform_sales.nlargest(5, 'na_sales')\n",
    "eu_top_platforms = platform_sales.nlargest(5, 'eu_sales')\n",
    "jp_top_platforms = platform_sales.nlargest(5, 'jp_sales')\n",
    "\n",
    "print(\"Top 5 platforms in NA (2014-2016):\\n\", na_top_platforms[['platform', 'na_sales']])\n",
    "print(\"\\nTop 5 platforms in EU (2014-2016):\\n\", eu_top_platforms[['platform', 'eu_sales']])\n",
    "print(\"\\nTop 5 platforms in JP (2014-2016):\\n\", jp_top_platforms[['platform', 'jp_sales']])\n",
    "\n",
    "# Calculating the market share for each top platform in each region\n",
    "na_total_sales = na_top_platforms['na_sales'].sum()\n",
    "eu_total_sales = eu_top_platforms['eu_sales'].sum()\n",
    "jp_total_sales = jp_top_platforms['jp_sales'].sum()\n",
    "\n",
    "na_top_platforms['market_share'] = (na_top_platforms['na_sales'] / na_total_sales) * 100\n",
    "eu_top_platforms['market_share'] = (eu_top_platforms['eu_sales'] / eu_total_sales) * 100\n",
    "jp_top_platforms['market_share'] = (jp_top_platforms['jp_sales'] / jp_total_sales) * 100\n",
    "\n",
    "print(\"\\nMarket shares of top platforms in NA (2014-2016):\\n\", na_top_platforms[['platform', 'market_share']])\n",
    "print(\"\\nMarket shares of top platforms in EU (2014-2016):\\n\", eu_top_platforms[['platform', 'market_share']])\n",
    "print(\"\\nMarket shares of top platforms in JP (2014-2016):\\n\", jp_top_platforms[['platform', 'market_share']])"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### According to the above data, customer's taste differs in other regions. The only common platform between the 3 regions is PS3."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Top 5 genres in NA (2014-2016):\n",
      "            genre  na_sales\n",
      "8        Shooter     79.02\n",
      "0         Action     72.53\n",
      "10        Sports     46.13\n",
      "7   Role-Playing     33.47\n",
      "3           Misc     15.05\n",
      "\n",
      "Top 5 genres in EU (2014-2016):\n",
      "            genre  eu_sales\n",
      "0         Action     74.68\n",
      "8        Shooter     65.52\n",
      "10        Sports     45.73\n",
      "7   Role-Playing     28.17\n",
      "6         Racing     14.13\n",
      "\n",
      "Top 5 genres in JP (2014-2016):\n",
      "           genre  jp_sales\n",
      "7  Role-Playing     31.16\n",
      "0        Action     29.58\n",
      "2      Fighting      6.37\n",
      "3          Misc      5.61\n",
      "8       Shooter      4.87\n"
     ]
    }
   ],
   "source": [
    "# The top five genres from the year 2014 to 2016. Explain the difference.\n",
    "\n",
    "# Group the data by 'genre' and sum the regional sales\n",
    "genre_sales = df_2014_2016.groupby('genre')[['na_sales', 'eu_sales', 'jp_sales']].sum().reset_index()\n",
    "\n",
    "# Get the top 5 genres for each region\n",
    "na_top_genres = genre_sales.nlargest(5, 'na_sales')\n",
    "eu_top_genres = genre_sales.nlargest(5, 'eu_sales')\n",
    "jp_top_genres = genre_sales.nlargest(5, 'jp_sales')\n",
    "\n",
    "print(\"Top 5 genres in NA (2014-2016):\\n\", na_top_genres[['genre', 'na_sales']])\n",
    "print(\"\\nTop 5 genres in EU (2014-2016):\\n\", eu_top_genres[['genre', 'eu_sales']])\n",
    "print(\"\\nTop 5 genres in JP (2014-2016):\\n\", jp_top_genres[['genre', 'jp_sales']])"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Action genre appears to be the most common popular genre among other genres in all regions. Action comes second in North America, first in Europe, and second in Japan."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Sales by ESRB Rating in NA (2014-2016):\n",
      "     rating  na_sales\n",
      "0        E     50.74\n",
      "1     E10+     33.23\n",
      "2        M     96.42\n",
      "3        T     38.95\n",
      "4  unknown     64.72\n",
      "\n",
      "Sales by ESRB Rating in EU (2014-2016):\n",
      "     rating  eu_sales\n",
      "0        E     58.06\n",
      "1     E10+     26.16\n",
      "2        M     93.44\n",
      "3        T     34.07\n",
      "4  unknown     58.95\n",
      "\n",
      "Sales by ESRB Rating in JP (2014-2016):\n",
      "     rating  jp_sales\n",
      "0        E      8.94\n",
      "1     E10+      4.46\n",
      "2        M      8.01\n",
      "3        T     14.78\n",
      "4  unknown     56.90\n"
     ]
    }
   ],
   "source": [
    "# Group the data by 'rating' and sum the regional sales from 2014 to 2016\n",
    "rating_sales = df_2014_2016.groupby('rating')[['na_sales', 'eu_sales', 'jp_sales']].sum().reset_index()\n",
    "\n",
    "print(\"Sales by ESRB Rating in NA (2014-2016):\\n\", rating_sales[['rating', 'na_sales']])\n",
    "print(\"\\nSales by ESRB Rating in EU (2014-2016):\\n\", rating_sales[['rating', 'eu_sales']])\n",
    "print(\"\\nSales by ESRB Rating in JP (2014-2016):\\n\", rating_sales[['rating', 'jp_sales']])"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<div class=\"alert alert-block alert-danger\">\n",
    "<b>Reviewer's comment</b> <a class=\"tocSkip\"></a>\n",
    "    \n",
    "~~When you fill in missing values for rating with \"unknown\" for example you will see huge difference for Japan~~\n",
    "    \n",
    "\n",
    "</div>"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<div class=\"alert alert-block alert-success\"> <b>Reviewer's comment v2</b> <a \n",
    "class=\"tocSkip\"></a>\n",
    "Fixed</div>"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Although these findings imply that ESRB ratings can have some effect on sales, it's crucial to remember that other elements like player preferences, game popularity, marketing, and genre can all have a big impact on sales in a given area. Furthermore, the interpretation of these data may be impacted by the fact that the ESRB rating system is largely utilised in North America and that other rating systems may be in use elsewhere.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "p-value: 0.10450507919348415\n",
      "We fail to reject the null hypothesis. There is no significant difference between the average user ratings of the Xbox One and PC platforms.\n"
     ]
    }
   ],
   "source": [
    "# Step 5. \n",
    "\n",
    "# Test the following hypotheses: Average user ratings of the Xbox One and PC platforms are the same from the year 2014 to 2016.\n",
    "\n",
    "# Filter the data for Xbox One and PC platforms\n",
    "xbox_pc_data = df_2014_2016[(df_2014_2016['platform'] == 'XOne') | (df_2014_2016['platform'] == 'PC')]\n",
    "\n",
    "# Create New Arrays\n",
    "xbox_ratings = xbox_pc_data[xbox_pc_data['platform'] == 'XOne']['user_score'].dropna()\n",
    "pc_ratings = xbox_pc_data[xbox_pc_data['platform'] == 'PC']['user_score'].dropna()\n",
    "\n",
    "# Perform the two-sample t-test\n",
    "t_stat, p_value = ttest_ind(xbox_ratings, pc_ratings)\n",
    "\n",
    "# Print\n",
    "print(f\"p-value: {p_value}\")\n",
    "\n",
    "# Interpret\n",
    "alpha = 0.05\n",
    "if p_value < alpha:\n",
    "    print(\"We reject the null hypothesis. The average user ratings of the Xbox One and PC platforms are significantly different.\")\n",
    "else:\n",
    "    print(\"We fail to reject the null hypothesis. There is no significant difference between the average user ratings of the Xbox One and PC platforms.\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### We picked alpha = 0.05 because it is the most popular significance level. H0 hypothesis is that the average The average user ratings of the Xbox One and PC platforms are significantly different. The p-value is higher than alpha which means that we fail to reject the hypothesis and are unable to prove it. The average user ratings of the Xbox One and PC platforms are not significantly different."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 47,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "t-statistic: 9.425173048948047\n",
      "p-value: 2.8711147985105864e-19\n",
      "We reject the null hypothesis. The average user ratings for the Action and Sports genres are significantly different.\n"
     ]
    }
   ],
   "source": [
    "# working code\n",
    "\n",
    "# Test the following hypotheses: Average user ratings for the Action and Sports genres are different from the year 2014 to 2016.\n",
    "\n",
    "# Filter the data for Action and Sports genres\n",
    "action_sports_data = df_2014_2016[(df_2014_2016['genre'] == 'Action') | (df_2014_2016['genre'] == 'Sports')]\n",
    "\n",
    "# Create New Arrays\n",
    "action_ratings = action_sports_data[action_sports_data['genre'] == 'Action']['user_score'].dropna()\n",
    "sports_ratings = action_sports_data[action_sports_data['genre'] == 'Sports']['user_score'].dropna()\n",
    "\n",
    "# Perform the two-sample t-test\n",
    "t_stat, p_value = ttest_ind(action_ratings, sports_ratings)\n",
    "\n",
    "# Print\n",
    "print(f\"t-statistic: {t_stat}\")\n",
    "print(f\"p-value: {p_value}\")\n",
    "\n",
    "# Interpret\n",
    "alpha = 0.05\n",
    "if p_value < alpha:\n",
    "    print(\"We reject the null hypothesis. The average user ratings for the Action and Sports genres are significantly different.\")\n",
    "else:\n",
    "    print(\"We fail to reject the null hypothesis. There is no significant difference between the average user ratings for the Action and Sports genres.\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<div class=\"alert alert-block alert-danger\">\n",
    "<b>Reviewer's comment</b> <a class=\"tocSkip\"></a>\n",
    "    \n",
    "~~Code is correct but results will be different for relevant period~~\n",
    "\n",
    "</div>"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<div class=\"alert alert-block alert-success\"> <b>Reviewer's comment v2</b> <a \n",
    "class=\"tocSkip\"></a>\n",
    "Now results are correct</div>"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### We chose alpha = 0.05 because it is the most popular significance level. H0 hypothesis is that the average user ratings for the Action and Sports genres are significantly differentt. The p-value is less than alpha which means that we to reject the null hypothesis. There is a significant difference between the average user ratings for the Action and Sports genres."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 48,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Platform: PS4\n",
      "Mean User Rating: 6.83\n",
      "Standard Deviation of User Ratings: 1.40\n",
      "Variance of User Ratings: 1.96\n",
      "\n",
      "Platform: XOne\n",
      "Mean User Rating: 6.59\n",
      "Standard Deviation of User Ratings: 1.38\n",
      "Variance of User Ratings: 1.89\n",
      "\n",
      "Platform: 3DS\n",
      "Mean User Rating: 7.14\n",
      "Standard Deviation of User Ratings: 1.50\n",
      "Variance of User Ratings: 2.26\n",
      "\n",
      "Platform: PS3\n",
      "Mean User Rating: 6.01\n",
      "Standard Deviation of User Ratings: 1.85\n",
      "Variance of User Ratings: 3.43\n",
      "\n",
      "Platform: X360\n",
      "Mean User Rating: 5.77\n",
      "Standard Deviation of User Ratings: 1.71\n",
      "Variance of User Ratings: 2.92\n",
      "\n"
     ]
    }
   ],
   "source": [
    "# Platforms with the highest total sales from year 2014 to 2016.\n",
    "top_platforms = df_2014_2016.groupby('platform')['total_sales'].sum().reset_index().sort_values('total_sales', ascending=False).head(5)['platform']\n",
    "\n",
    "# Filtering the data to include only the top platforms\n",
    "top_platforms_data = df_2014_2016[df_2014_2016['platform'].isin(top_platforms)]\n",
    "\n",
    "# Calculating mean, standard deviation, and variance of user ratings for each top platform\n",
    "for platform in top_platforms:\n",
    "    platform_data = top_platforms_data[top_platforms_data['platform'] == platform]\n",
    "    user_ratings = platform_data['user_score'].astype(float).dropna()  # Convert to float\n",
    "    \n",
    "    if len(user_ratings) > 0:\n",
    "        mean_rating = user_ratings.mean()\n",
    "        std_dev_rating = user_ratings.std()\n",
    "        var_rating = user_ratings.var()\n",
    "        \n",
    "        print(f\"Platform: {platform}\")\n",
    "        print(f\"Mean User Rating: {mean_rating:.2f}\")\n",
    "        print(f\"Standard Deviation of User Ratings: {std_dev_rating:.2f}\")\n",
    "        print(f\"Variance of User Ratings: {var_rating:.2f}\")\n",
    "        print()\n",
    "    else:\n",
    "        print(f\"Platform: {platform}\")\n",
    "        print(\"No user ratings available.\")\n",
    "        print()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<div class=\"alert alert-block alert-success\"> <b>Reviewer's comment</b> <a \n",
    "class=\"tocSkip\"></a>\n",
    "Great</div>"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Conlusion\n",
    "\n",
    "### The top 5 platforms in terms of overall total sales are: PS2, X360, PS3, Wii, DS\n",
    "### There is a total of 22 platforms with zero sales in 2016 such as 2600, 3DO, DC, DS, GB and others.\n",
    "### Top 5 growing platforms (2014-2016):PS4, XOne,  3DS, PS3, X360.\n",
    "\n",
    "### Top 5 shrinking platforms (2014-2016): Wii, X360, PSP, PS3, WiiU\n",
    "\n",
    "### There is a strong relationship between user reviews and total sales but the relationship between professional reviews and total sales is stronger.\n",
    "\n",
    "### The highest platforms by global sales between 2014 and 2016 is PS4 with more than 0.76 million dollars and the lowest is PSP with approximately 0.02 million dollars.\n",
    "\n",
    "### The lowest genre by total sales is Puzzle with approximately 0.2 million dollars.\n",
    "\n",
    "### The only common platform with high sales between the 3 regions is PS3.\n",
    " \n",
    "### The average user ratings of the Xbox One and PC platforms are not significantly different.\n",
    "\n",
    "### There is a significant difference between the average user ratings for the Action and Sports genres."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<div class=\"alert alert-block alert-warning\"> <b>Reviewer's comment</b> <a \n",
    "class=\"tocSkip\"></a>\n",
    "    \n",
    "~~Please change the conclusion if necessary~~ </div>"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.19"
  },
  "toc": {
   "base_numbering": 1,
   "nav_menu": {},
   "number_sections": true,
   "sideBar": true,
   "skip_h1_title": true,
   "title_cell": "Table of Contents",
   "title_sidebar": "Contents",
   "toc_cell": false,
   "toc_position": {},
   "toc_section_display": true,
   "toc_window_display": false
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
